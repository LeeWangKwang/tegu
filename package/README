
This directory contains files and scripts that are used to package QoS-Lite into 
a .deb (and maybe other) package formats. 

The script export.ksh creates an export directory in /tmp/<username>/export/<version>
and builds a tar file that is placed into /tmp/<username>/export/bundle that then
is used to bundle the release.  The package name (e.g. qlite) and version number
must be supplied as positional parms on the command line.  Files are extracted
from various parts of this repo directory structure, so ensure that you have the 
correct branch checked out AND that it is up to date!!

The script bundle.ksh assumes that the export.ksh script has been executed and 
that the tar file for the bundle exists in /tmp.  It builds the .deb.  This is a 
two step process to allow other bundle scripts to be used against the same 
tar file, etc.


These steps should be executed to build a .deb file:

	1) git pull (or whatever) make your mods and commit changes.
	2) ensure binaries in tegu/main are up to date: tegu, tegu_agent, rjprt
	3) cd to package 	(this directory)
	4) run 'export.ksh qlite 1.xx'  (collects scripts and binaries into a /tmp directory stripping .ksh extensions etc.)
	5) run 'mk_deb.ksh qlite 1.xx'  (uses dir created by export.ksh to generate .deb)

1.xx is what ever version number should be given to the deb file.

The deb is left in the /tmp directory (/tmp/<user>/export/bundle/*.deb).  
The process is two step at the moment (export then mk) because it's still
loosely based on using debuild which required a tar file of stuff as input and was
run on a different machine than where I was managing the source.  I plan to incorporate 
the mk_deb into export.ksh at somepoint, but there were other things to worry about 
past getting it to work.

There will be detritus left in /tmp/<username>/export; for now it's easier to 
debug with the extra stuff hanging about.  Once you've picked up the .deb from 
that directory, it's safe to delete the whole export tree if you want. 

Deb files should NOT be checked into the repo. 
